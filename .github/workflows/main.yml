name: CI/CD Flask com Docker

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código-fonte
        uses: actions/checkout@v3

      - name: Configurar ambiente Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependências
        run: |
          pip install -r requirements.txt

      - name: Executar testes unitários
        run: |
          export PYTHONPATH=.
          pytest tests/

      - name: Gerar artefato do projeto
        run: |
          zip -r flask-app.zip . -x '*.git*'

      - name: Publicar artefato como Release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: flask-app.zip
          tag_name: v${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código-fonte
        uses: actions/checkout@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Autenticar no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Construir e publicar imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}:latest

  deploy-to-server:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://cicd.renatodreis.com.br

    steps:
      - name: Deploy no servidor via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/projeto-cicd
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_PAT }}
            docker-compose pull
            docker-compose up -d
            docker logout ghcr.io

  notify-on-failure:
    needs: [build-and-test, docker-build-and-push, deploy-to-server]
    if: failure()
    runs-on: ubuntu-latest

    steps:
      - name: Enviar notificação de falha por e-mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "[CI/CD Falhou] Projeto Flask"
          body: "O pipeline CI/CD falhou, verifique imediatamente o GitHub Actions."
          to: renato@renatodreis.com.br
          from: github-actions@example.com
